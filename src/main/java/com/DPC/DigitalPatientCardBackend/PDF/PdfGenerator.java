package com.DPC.DigitalPatientCardBackend.PDF;

import com.itextpdf.text.*;
import com.itextpdf.text.pdf.*;
import com.itextpdf.text.pdf.draw.LineSeparator;

import java.io.OutputStream;
import java.util.List;

public class PdfGenerator {

    public static void generatePdf(OutputStream out, String title, List<String> paragraphs, List<List<String>> tableData) throws Exception {
        Document document = new Document(PageSize.A4, 36, 36, 54, 36);
        PdfWriter.getInstance(document, out);

        document.open();

        // Define fonts and colors
        BaseColor headerColor = new BaseColor(0, 121, 184); // A nice blue header bar color
        Font titleFont = FontFactory.getFont(FontFactory.HELVETICA_BOLD, 20, BaseColor.WHITE);
        Font sectionTitleFont = FontFactory.getFont(FontFactory.HELVETICA_BOLD, 14, BaseColor.DARK_GRAY);
        Font normalFont = FontFactory.getFont(FontFactory.HELVETICA, 11, BaseColor.BLACK);
        Font tableHeaderFont = FontFactory.getFont(FontFactory.HELVETICA_BOLD, 12, BaseColor.WHITE);

        // Header Bar with Title
        if (title != null && !title.isEmpty()) {
            PdfPTable headerBar = new PdfPTable(1);
            headerBar.setWidthPercentage(100);
            PdfPCell headerCell = new PdfPCell(new Phrase(title, titleFont));
            headerCell.setBackgroundColor(headerColor);
            headerCell.setHorizontalAlignment(Element.ALIGN_CENTER);
            headerCell.setPadding(10f);
            headerCell.setBorder(Rectangle.NO_BORDER);
            headerBar.addCell(headerCell);
            document.add(headerBar);

            document.add(Chunk.NEWLINE);
            LineSeparator ls = new LineSeparator();
            document.add(new Chunk(ls));
        }

        // Paragraphs with justified alignment and spacing
        if (paragraphs != null) {
            for (String line : paragraphs) {
                Paragraph paragraph = new Paragraph(line, normalFont);
                paragraph.setAlignment(Element.ALIGN_JUSTIFIED);
                paragraph.setSpacingBefore(6);
                paragraph.setSpacingAfter(6);
                paragraph.setFirstLineIndent(20);
                document.add(paragraph);
            }
        }

        // Add some visual spacing before table
        if (tableData != null && !tableData.isEmpty()) {
            document.add(Chunk.NEWLINE);
            document.add(Chunk.NEWLINE);
        }

        // Table with alternating row colors and styled header
        if (tableData != null && !tableData.isEmpty()) {
            int numCols = tableData.get(0).size();
            PdfPTable table = new PdfPTable(numCols);
            table.setWidthPercentage(100);
            table.setSpacingBefore(12);
            table.setHeaderRows(1);

            // Set column widths evenly
            float[] columnWidths = new float[numCols];
            for (int i = 0; i < numCols; i++) {
                columnWidths[i] = 1f;
            }
            table.setWidths(columnWidths);

            // Header row with background color and centered text
            List<String> headerRow = tableData.get(0);
            for (String header : headerRow) {
                PdfPCell headerCell = new PdfPCell(new Phrase(header, tableHeaderFont));
                headerCell.setBackgroundColor(headerColor);
                headerCell.setHorizontalAlignment(Element.ALIGN_CENTER);
                headerCell.setPadding(8);
                table.addCell(headerCell);
            }

            // Data rows with alternating colors
            BaseColor lightGray = new BaseColor(230, 230, 230);
            for (int i = 1; i < tableData.size(); i++) {
                List<String> row = tableData.get(i);
                BaseColor rowColor = (i % 2 == 0) ? BaseColor.WHITE : lightGray;
                for (String cellValue : row) {
                    PdfPCell cell = new PdfPCell(new Phrase(cellValue == null ? "" : cellValue, normalFont));
                    cell.setBackgroundColor(rowColor);
                    cell.setHorizontalAlignment(Element.ALIGN_LEFT);
                    cell.setPadding(6);
                    table.addCell(cell);
                }
            }
            document.add(table);
        }

        // Footer line separator
        document.add(Chunk.NEWLINE);
        LineSeparator footerLine = new LineSeparator(1f, 80, BaseColor.GRAY, Element.ALIGN_CENTER, -2);
        document.add(new Chunk(footerLine));

        // Footer text (optional)
        Font footerFont = FontFactory.getFont(FontFactory.HELVETICA_OBLIQUE, 9, BaseColor.GRAY);
        Paragraph footer = new Paragraph("Generated by Digital Patient Card System", footerFont);
        footer.setAlignment(Element.ALIGN_CENTER);
        footer.setSpacingBefore(4);
        document.add(footer);

        document.close();
    }
}
